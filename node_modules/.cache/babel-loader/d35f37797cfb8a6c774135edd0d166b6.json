{"ast":null,"code":"import _objectSpread from\"/Users/hannahborel/Desktop/Bootcamp/Homework/clicky-game/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/hannahborel/Desktop/Bootcamp/Homework/clicky-game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/hannahborel/Desktop/Bootcamp/Homework/clicky-game/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/hannahborel/Desktop/Bootcamp/Homework/clicky-game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/hannahborel/Desktop/Bootcamp/Homework/clicky-game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/hannahborel/Desktop/Bootcamp/Homework/clicky-game/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import\"./Grid.css\";import iconBlocks from\"../../characters.json\";import Card from\"../Card\";import Header from\"../Header/Header\";var Grid=/*#__PURE__*/function(_Component){_inherits(Grid,_Component);function Grid(){var _getPrototypeOf2;var _this;_classCallCheck(this,Grid);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Grid)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={icons:iconBlocks,score:0};_this.resetGame=function(){_this.setState({score:0,icons:iconBlocks});};_this.handleCorrect=function(newicons){_this.setState({icons:_this.shuffleArray(newicons),score:_this.state.score+1});if(_this.state.score===11){_this.resetGame();console.log(\"You won!\");}};_this.handleWrong=function(){_this.resetGame();};_this.handleClick=function(name){var guessedCorrect=false;var newicons=_this.state.icons.map(function(femme){var newPic=_objectSpread({},femme);if(newPic.name===name){if(!newPic.clicked){console.log(\"Already guessed------------\");newPic.clicked=true;guessedCorrect=true;}}return newPic;});console.log(\"GUESSED CORRECT: \",guessedCorrect);guessedCorrect?_this.handleCorrect(newicons):_this.handleWrong(newicons);};_this.shuffleArray=function(icons){for(var i=icons.length-1;i>0;i--){var j=Math.floor(Math.random()*(i+1));var _ref=[icons[j],icons[i]];icons[i]=_ref[0];icons[j]=_ref[1];}return icons;};return _this;}_createClass(Grid,[{key:\"render\",value:function render(){var _this2=this;return React.createElement(\"div\",null,React.createElement(Header,{score:this.state.score}),React.createElement(\"div\",{className:\"gridWrapper\"},React.createElement(\"div\",{className:\"grid\"},this.state.icons.map(function(icon){return React.createElement(Card,{name:icon.name,key:icon.name,handleClick:_this2.handleClick,src:icon.image,alt:icon.name});}))));}}]);return Grid;}(Component);;export default Grid;","map":{"version":3,"sources":["/Users/hannahborel/Desktop/Bootcamp/Homework/clicky-game/src/components/Grid/Grid.js"],"names":["React","Component","iconBlocks","Card","Header","Grid","state","icons","score","resetGame","setState","handleCorrect","newicons","shuffleArray","console","log","handleWrong","handleClick","name","guessedCorrect","map","femme","newPic","clicked","i","length","j","Math","floor","random","icon","image"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Grid.css\";\nimport iconBlocks from \"../../characters.json\";\nimport Card from \"../Card\";\nimport Header from \"../Header/Header\";\n\n\nclass Grid extends Component {\n    state = {\n        icons: iconBlocks,\n        score: 0\n    }\n\n    resetGame = () => {\n        this.setState({\n            score: 0,\n            icons: iconBlocks\n        })\n    }\n\n    handleCorrect = newicons => {\n        this.setState({\n            icons: this.shuffleArray(newicons),\n            score: this.state.score + 1,\n        });\n\n        if (this.state.score === 11) {\n            this.resetGame();\n            console.log(\"You won!\");\n        }\n\n    };\n\n    handleWrong = () => {\n        this.resetGame();\n    };\n\n    handleClick = name => {\n        let guessedCorrect = false;\n        const newicons = this.state.icons.map(femme => {\n            const newPic = { ...femme };\n            if (newPic.name === name) {\n                if (!newPic.clicked) {\n                    console.log(\"Already guessed------------\");\n                    newPic.clicked = true;\n                    guessedCorrect = true;\n                }\n\n            }\n            return newPic;\n        })\n        console.log(\"GUESSED CORRECT: \", guessedCorrect)\n        guessedCorrect ? this.handleCorrect(newicons) : this.handleWrong(newicons)\n    };\n\n    shuffleArray = icons => {\n        for (let i = icons.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [icons[i], icons[j]] = [icons[j], icons[i]];\n        }\n        return (icons);\n    };\n\n    render() {\n        return (\n            <div>\n                <Header score={this.state.score} />\n                <div className=\"gridWrapper\">\n                    <div className=\"grid\">\n                        {this.state.icons.map(icon => {\n                            return (<Card\n                                name={icon.name}\n                                key={icon.name}\n                                handleClick={this.handleClick}\n                                src={icon.image}\n                                alt={icon.name}\n                            />)\n                        })}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n};\n\nexport default Grid;"]},"metadata":{},"sourceType":"module"}